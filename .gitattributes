# This is a good default: files that are auto-detected by git to be text are
# converted to the platform-native line ending (LF on Unix, CRLF on Windows)
# in the working tree and to LF in the repository.
#
* text=auto

# Use `eol=crlf` for files that should have the CRLF line ending both in the
# working tree (even on Unix) and in the repository.
#
# *.bat text eol=crlf

# Use `eol=lf` for files that should have the LF line ending both in the
# working tree (even on Windows) and in the repository.
#
# *.sh text eol=lf

# Use `binary` to make sure certain files are never auto-detected as text.
#
# *.png binary

# Use `linguist-generated` attribute to mark or unmark paths to be ignored for
# the repository's language statistics and hidden by default in diffs.
#
glfw/src/pregenerated/glfw/** linguist-generated=true

# Note that unlike POSIX, Windows distinguishes between file symlinks and
# directory symlinks. However, git does not record the symlink type and will
# always attempt to create a file symlink. As a result, if a directory symlink
# is used by a project and such a project is developed on Windows, then the type
# of this symlink needs to be explicitly specified in the .gitattributes file
# (see the relevant git commit for details). For example, if src/ is a symlink
# that points to upstream/src/, then we need to add `src symlink=dir`.
#
# build2.org/article/symlinks.xhtml
#
glfw-examples/deps symlink=dir
glfw-tests/deps symlink=dir
