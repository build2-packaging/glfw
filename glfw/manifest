: 1
name: glfw
tests: glfw-tests
examples: glfw-examples
version: 3.4.0
type: lib
language: c
summary: Multi-platform library for OpenGL, OpenGL ES and Vulkan development on the desktop.
license: Zlib
package-description-file: PACKAGE-README.md
url: https://www.glfw.org
doc-url: https://www.glfw.org/docs/latest/
src-url: https://github.com/glfw/glfw
package-url: https://github.com/build2-packaging/glfw
package-email: packaging@build2.org ; Mailing list.
depends: * build2 >= 0.17.0
depends: * bpkg >= 0.17.0

# CI
#
# FIXME: We explicitly exclude `bindist` builds globally, but they still seem to
# be included in the `sys` meta-builds (e.g., `debian-wayland-builds: sys`), and
# thus end up running on CI. This is unintended.
#
# A similar issue occurs with `-static` builds: even though we exclude them
# using `*-exclude: *-static**`, they still get included through the `sys` group
# and are built on CI. We do not support such configurations.
#
# We need to investigate how inclusion/exclusion rules interact when using
# meta-builds like `sys`, and ensure that excluded builds are *actually* omitted
# from all CI jobs.

builds: -freebsd
builds: -linux
builds: -macos
builds: -bindist

debian-wayland-builds: sys
debian-wayland-build-include: linux_debian_12-**
debian-wayland-build-exclude: linux_debian_12-*-static**
debian-wayland-build-exclude: **
debian-wayland-build-config:
\
config.glfw.build_x11=true
config.glfw.build_wayland=true
\

debian-x11-builds: sys
debian-x11-build-include: linux_debian*-**
debian-x11-build-exclude: **
debian-x11-build-config:
\
config.glfw.build_x11=true
\

fedora-wayland-builds: sys
fedora-wayland-build-include: linux_fedora*-**
fedora-wayland-build-exclude: **
fedora-wayland-build-config:
\
config.glfw.build_x11=true
config.glfw.build_wayland=true
\

fedora-x11-builds: sys
fedora-x11-build-include: linux_fedora*-**
fedora-x11-build-exclude: **
fedora-x11-build-config:
\
config.glfw.build_x11=true

# Note: System package names are case-sensitive. For example, `libxkbcommon` is
# correctly lowercase, whereas `libXcursor`, `libXi`, etc., use an uppercase 'X'
# as per their upstream and packaging conventions. These are not typos.
#
sys:libXcursor
sys:libXi
sys:libXinerama
sys:libXrandr
sys:libxkbcommon
\

macos-clang-builds: macos
macos-clang-build-include: macos_*-clang
macos-clang-build-exclude: **
